/*
 * generated by Xtext 2.10.0
 */
package org.booster2.web

import com.google.inject.Binder; 
import org.eclipse.xtext.formatting2.FormatterPreferenceValuesProvider;
import org.eclipse.xtext.preferences.IPreferenceValuesProvider;
import org.eclipse.xtext.formatting2.FormatterPreferences;
import org.eclipse.xtend.lib.annotations.FinalFieldsConstructor
import org.eclipse.xtext.web.server.persistence.FileResourceHandler; 
import org.eclipse.xtext.web.server.persistence.IServerResourceHandler; 
import org.eclipse.xtext.web.server.persistence.IResourceBaseProvider;
import org.eclipse.xtext.web.server.persistence.ResourceBaseProviderImpl;
import org.eclipse.xtext.web.server.model.IWebResourceSetProvider
import org.eclipse.xtext.web.server.XtextServiceDispatcher

/**
 * Use this class to register additional components to be used within the web application.
 */
@FinalFieldsConstructor
class Booster2WebModule extends AbstractBooster2WebModule {
		
	def void configureIPreferenceValuesProvider(Binder binder) {
		binder.bind(IPreferenceValuesProvider).annotatedWith(FormatterPreferences).to(FormatterPreferenceValuesProvider)
	}
	
	def Class<? extends IServerResourceHandler> bindIServerResourceHandler()  {
		BoosterResourceHandler
	}
	
	def Class<? extends XtextServiceDispatcher> bindXtextServiceDispatcher() {
		BoosterServiceDispatcher
	}
	
	def void configureIResourceBaseProvider(Binder binder) {
		binder.bind(IResourceBaseProvider).toInstance(
		new ResourceBaseProviderImpl("./booster-files"))
	}

}
